apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def proj_version = '0.0.1'
def proj_artifact_id = 'msproguard'
def proj_pom_name = 'Proguard for Android'
def proj_website_url = 'https://github.com/SupLuo/MS/tree/master/msproguard'

group = PROJ_GROUP
version = proj_version

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                groupId PROJ_GROUP
                artifactId proj_artifact_id
                version proj_version
                packaging 'aar'
                name proj_pom_name
                url proj_website_url

                licenses {
                    license {
                        name PROJ_LICENCE_NAME
                        url PROJ_LICENCE_URL
                        distribution PROJ_LICENCE_DEST
                    }
                }

                developers {
                    developer {
                        id DEVELOPER_ID
                        name DEVELOPER_NAME
                        email DEVELOPER_EMAIL
                    }
                }

                scm {
                    connection PROJ_VCSURL
                    developerConnection PROJ_VCSURL
                    url proj_website_url
                }

            }
        }
    }
}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
}

javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version true
        links "http://docs.oracle.com/javase/7/docs/api"
    }
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// 生成jar包
task releaseJar(type: Copy) {

    from( 'build/intermediates/bundles/release')
    into( '../jar')
    include('classes.jar')
    rename('classes.jar', 'okgo-' + version + '.jar')
}

//打包Jar的任务
task makeJar(type: proguard.gradle.ProGuardTask, dependsOn: "build") {

    // 未混淆的jar路径
    injars 'build/intermediates/bundles/release/classes.jar'
    // 混淆后的jar输出路径
    outjars 'build/outputs/msproguard-0.0.1.jar'
    // 混淆协议
    configuration 'proguard-rules.pro'

}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = proj_artifact_id               // project name in jcenter
        websiteUrl = proj_website_url
        vcsUrl = PROJ_VCSURL
        licenses = ["Apache-2.0"]
        publish = true
    }
}